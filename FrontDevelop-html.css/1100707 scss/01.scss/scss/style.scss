* {
  margin: 0;
  padding: 0;
  /* list-style: none; */
  font-family: '微軟正黑體';
  box-sizing: border-box;
}

.container {
  width: 75%;
  padding-left: 15px;
  padding-right: 15px;
  margin: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 20px 0 10px;
}

section {
  margin-bottom: 2rem !important;
}

// 單行註解 - 不會被編譯

/* 多行註解  會被編譯 */

/* 9. 資料型態
     數字(number)：分為無單位、有單位，1,2,13,10px,2rem
     字串(string)：有引號字串 "Noto Sans TC"，無引號字串 Noto Sans TC
     顏色(color)：blue，#000000，rgba(0,0,0,0.5)
     布林值(boolean)：true，false
     空值(null)：null
     列表(list)：用空格或逗號作為分隔，1.5rem 1rem 0 2rem 或  'Courier New', Courier, monospace
     map(物件)：很像 JS 物件，有 key/value pair 一對的特性
*/

/* 列表(list) */
/* list(列表) 就像 JS 的陣列，索引從 1 開始，不是 0 */
/* 它是一系列的項目值，透過 '空格'或'逗號' 分隔，裡面每個值都稱作 item */
$width_list: 100px, 200px, 300px;
$margin_list: 10px 20px 30px 40px;
$bgColor_list: red, green, blue;
$zindex_list: 1 2 3 4;
$border_list: 1px solid red, 1px solid blue, 1px solid green, 1px solid yellow;

/* 取 list 裡面的 item 值 nth(list,index) 內建函式， */
.list {
  width: nth($width_list, 1); // 100px
  margin: nth($margin_list, 2); // 20px
}

/* 取 list 索引 index($list: , $value: ) 內建函式 */
.index {
  width: index($width_list, 300px); // 3
  z-index: index($border_list, 1px solid blue); // 2
  z-index: index($border_list, 1px solid green); // 3
}

/* 取 list 長度 length($list: ) 內建函式 */
.length {
  z-index: length($border_list); // 4
}

/* @for $var from start to end {} */
/* 使用 @for 並從 list 取值做出 class */
@for $i from 1 through length($bgColor_list) {
  .bg-#{nth($bgColor_list, $i)} {
    background-color: nth($bgColor_list, $i);
  }
  // .bg-blue {
  //   background-color: blue;
  // }
}

/* @each $var in list {} */
/* 使用 @each...in  從 list 取值做出 class，也可以用在 map 物件 */
@each $value in $bgColor_list {
  .each-bg-#{$value} {
    background-color: $value;
  }
  // .each-bg-green {
  //   background-color: green;
  // }
}

/* 使用 join 合併 list join($list1: , $list2: , $separator: ) */
$list1: 1, 2, 3;
$list2: 4, 5, 6;
.join {
  z-index: join($list1, $list2);
  // z-index: 1, 2, 3, 4, 5, 6;
  margin: join((3px, 5px), (9px, 7px));
}

// 類似 js 的物件 
// const obj = {
//   name: 'AA',
//   num: 1
// }
/* Map 是 Scss 的物件，就像 JS 物件 */
/* Map (key: value) 一對(pair)的特性 */
$map1: (
  primary: papayawhip,
  secondary: gainsboro,
  third: mistyrose
);

@each $key, $value in $map1 {
  .bg-#{$key} {
    background-color: $value;
  }
  // .bg-primary {
  //   background-color: papayawhip;
  // }
}

$map2: (
  size1: 100px,
  size2: 200px,
  size3: 300px
);

/* 對 map 物件 只取 key 值 map-keys($map_name) */
@each $key in map-keys($map2) {
  .#{$key} {
    color: sandybrown;
  }
  // .size1 {
  //   color: sandybrown;
  // }  
  // .size2 {
  //   color: sandybrown;
  // }
}

$map3: (
  shadow1: 0 0 10px springgreen,
  shadow2: 0 0 20px springgreen,
  shadow3: 0 0 30px springgreen
);

/* 對 map 物件 只取 value 值 map-values($map_name) */
$i: 0;
@each $value in map-values($map3) {
  $i: $i + 1;
  .shadow-#{$i} {
    box-shadow: $value;
  }
}

/* 巢狀 map
$map: (
  $key: (
    $value <- 在此處為 第二層 map
  )
)
*/
$map4: (
  box0: (
    width: 100px,
    height: 100px
  ),
  box1: (
    width: 200px,
    height: 200px
  ),
  box2: (
    width: 300px,
    height: 300px
  )
);

// $key : box1 box2

// $value
  // (
  //   width: 100px,
  //   height: 100px
  // )

/* map-get($map: , $key: ) */
@each $key,$value in $map4 {
  $width: map-get($value, width);
  $height: map-get($value, height);
  .box-#{$key} {
    width: $width;
    height: $height;
  }
}



/* 
* 資料型態
- 基礎型別值
undefined
null
number              數字
string              字串
boolean true/false  布林值

- 物件
array               陣列
object
function
new Date()
*/